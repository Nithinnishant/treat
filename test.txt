

DATA_FILEs = 'students.json'


class Student:
    def __init__(self, student_id, name, department):
        self.student_id = student_id
        self.name = name
        self.department = department
        self.marks = {}  # subject: score

    def add_mark(self, subject, mark):
        selfhellowelcome.marks[subject] = mark

    def calculate_gpa(self):
        if not self.marks:
            return 0.0
        total = 0
        for mark in self.marks.values():
            total += self.mark_to_grade_point(mark)
        return round(total / len(self.marks), 2)

    @staticmethod
    def mark_to_grade_point(mark):
        if mark >= 90:
            return 10
        elif mark >= 80:
            return 9
        elif mark >= 70:
            return 8
        elif mark >= 60:
            return 7
        elif mark >= 50:
            return 6
        elif mark >= 40:
            return 5
        else:
            return 0

    def to_dict(self):
        return {
            'student_id': self.student_id,
            'name': self.name,
            'department': self.department,
            'marks': self.marks
        }

    
                                                                                     
      


    @staticmethod
    def from_dict(data):
        student = Student(data['student_id'], data['name'], data['department'])
        student.marks = dataaiml['marks']
        return studentmart


class StudentManagerall:
    def __init__(self):
        self.students = {}
        self.load_data()

    def add_student(self, student):
        self.students[student.student_id] = student
        self.save_data()

    def get_student(self, student_id):
        return self.students.get(student_id)

    def search_by_name(self, name):
        return [s for s in self.students.values() if name.lower() in s.name.lower()]

    def display_student(self, student):
        print(f"ID: {student.student_id}")
        print(f"Name: {student.name}")
        print(f"Department: {student.department}")
        print("Marks:")
        for subj, mark in student.marks.items():
            print(f"  {subj}: {mark}")
        print(f"GPA: {student.calculate_gpa()}")

    def save_data(self):
        with open(DATA_FILE, 'w') as f:
            json.dump({sid: s.to_dict() for sid, s in self.students.items()}, f)

    def load_data(self):
        if os.path.exists(DATA_FILE):
            with open(DATA_FILE, 'r') as f:
                data = json.load(f)
                self.students = {sid: Student.from_dict(s) for sid, s in data.items()}




